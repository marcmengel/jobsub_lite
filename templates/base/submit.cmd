# generated by jobsub_lite 
# {%if debug is defined and debug %}debug{% endif %}

{% block universe_exe %}
universe           = vanilla
executable         = {{script_name|default('simple.sh')}}
arguments          = {{exe_arguments|join(" ")}}
transfer_executable  = True
transfer_input_files = {{executable|basename}}
{% endblock universe_exe %}

{% block outputs %}
output             = {{filebase}}.out
error              = {{filebase}}.err
log                = {{filebase}}.log
transfer_output    = True
transfer_error     = True
transfer_output_files = .empty_file
#
# this is supposed to get us output even if jobs are held(?)
#
+SpoolOnEvict = false
when_to_transfer_output = ON_EXIT_OR_EVICT
{% endblock outputs %}

{% block environment %} 
environment        = CLUSTER=$(Cluster);PROCESS=$(Process);CONDOR_TMP={{outdir}};BEARER_TOKEN_FILE=.condor_creds/{{group}}.use;CONDOR_EXEC=/tmp;DAGMANJOBID=$(DAGManJobId);GRID_USER={{user}};JOBSUBJOBID=$(CLUSTER).$(PROCESS)@{{schedd}};EXPERIMENT={{group}};{{environment|join(';')}}
{% endblock%}

{% block schedd_parameters %}
rank               = Mips / 2 + Memory
job_lease_duration = 3600
{%if       cpu is defined and cpu %}request_cpus = {{cpu}}{% endif%}
{%if    memory is defined and memory %}request_memory = {{memory}}{% endif%}
{%if      disk is defined and disk %}request_disk = {{disk}}KB{% endif%}
{%if        OS is defined and OS %}+DesiredOS = {{OS}}{% endif%}
{%if blacklist is defined and blacklist %}+Blacklist_Sites = "{{blacklist}}" {% endif %}
+JOB_EXPECTED_MAX_LIFETIME = {{expected_lifetime}}
{% if site is defined and site and site != 'LOCAL' %}
+DESIRED_SITES = "{{site}}"
{% endif %}
{% endblock schedd_parameters %}

{% block monitoring_ads %}
+JobsubClientDN="{{clientdn}}"
+JobsubClientIpAddress="{{ipaddr}}"
+Owner="{{user}}"
+JobsubServerVersion="{{jobsub_version}}"
+JobsubClientVersion="{{jobsub_version}}"
+JobsubClientKerberosPrincipal="{{kerberos_principal}}"
{% if subgroup is defined and subgroup %}
+AccountingGroup = "group_{{group}}.{{subgroup}}.{{user}}"
{% else %}
+AccountingGroup = "group_{{group}}.{{user}}"
{% endif %}
+Jobsub_Group="{{group}}"
+JobsubJobId="$(CLUSTER).$(PROCESS)@{{schedd}}"
+GeneratedBy ="{{jobsub_version}} {{schedd}}"
{% endblock monitoring_ads %}

{% block misc_ads %}
notification       = Error
+Drain = False
{{resource_provides_quoted|join("\n+DESIRED_")}}
{{lines|join("\n")}}
{% endblock misc_ads %}

{% block notify%}
notify_user = {{email_to}}
{% endblock notify%}

{% block requirements %}
requirements  = {%if overwrite_requirements is defined and overwrite_requirements %}{{overwrite_requirements}}{%else%}target.machine =!= MachineAttrMachine1 && target.machine =!= MachineAttrMachine2  && (isUndefined(DesiredOS) || stringListsIntersect(toUpper(DesiredOS),IFOS_installed)) && (stringListsIntersect(toUpper(target.HAS_usage_model), toUpper(my.DESIRED_usage_model))){% endif%}{%if append_condor_requirements is defined and append_condor_requirements %} && {{append_condor_requirements}} {% endif%}
{% endblock requirements %}

{% block singularity %}
{% if no_singularity is false %}
+SingularityImage="{{singularity_image}}"
{% endif %}
{% endblock singularity %}

{% block token_auth %}
#
# token bits
#
{% if role is defined and role != 'Analysis' %}
use_oauth_services = {{group}}_{{role}}
{% else %}
use_oauth_services = {{group}}
{% endif %}
{% endblock token_auth%}

{% block queue%}
queue {{N}}
{% endblock queue%}
